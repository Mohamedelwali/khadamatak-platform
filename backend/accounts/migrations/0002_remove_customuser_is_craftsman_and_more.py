# Generated by Django 5.2.4 on 2025-08-06 01:23

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='customuser',
            name='is_craftsman',
        ),
        migrations.AddField(
            model_name='customuser',
            name='email_verified',
            field=models.BooleanField(default=False, help_text='هل تم توثيق البريد الإلكتروني؟', verbose_name='البريد الإلكتروني موثق'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='location',
            field=models.JSONField(blank=True, help_text='نقطة GeoJSON: {"type": "Point", "coordinates": [lng, lat]}', null=True, verbose_name='الموقع الجغرافي'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='phone_verified',
            field=models.BooleanField(default=False, help_text='هل تم توثيق رقم الهاتف؟', verbose_name='الهاتف موثق'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='user_type',
            field=models.CharField(choices=[('service_provider', 'مقدم خدمة'), ('customer', 'عميل')], default='customer', help_text='حدد نوع الحساب: مقدم خدمة أو عميل', max_length=20, verbose_name='نوع المستخدم'),
        ),
        migrations.AlterField(
            model_name='customuser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='المجموعات التي ينتمي إليها المستخدم', related_name='customuser_groups', to='auth.group', verbose_name='المجموعات'),
        ),
        migrations.AlterField(
            model_name='customuser',
            name='phone',
            field=models.CharField(blank=True, help_text='رقم الهاتف للتحقق والتواصل', max_length=20, null=True, verbose_name='رقم الهاتف'),
        ),
        migrations.AlterField(
            model_name='customuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='صلاحيات المستخدم', related_name='customuser_permissions', to='auth.permission', verbose_name='الصلاحيات'),
        ),
    ]
